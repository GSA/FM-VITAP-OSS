@model VITAP.Data.Models.Exceptions.UserExceptionViewModel

@{
    ViewBag.Title = "Pegasys Exception (" + Model.ErrorCode + " - " + Model.Memo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .fat {
        height:50px;
        width: 135px;
        font-size:30px;
    }

    textarea.fill  {
        max-width: 100%;
        margin-bottom: 5px;
        width: inherit;
        height: 7em;
    }

    .border-container {
        border: 1px solid black;
        padding:5px;
        margin-bottom: 5px;
    }

    .row.btn-table {
        padding-bottom: 5px;
    }

</style>

<div class="container-fluid">
    <br />
    <h1 style="font-weight: bold">@string.Format("{0} | Pegasys Exception ({1}) - {2}", Model.Id, Model.ErrorCode, Model.Memo)</h1>
    <br />
    <div class="border-container">
        <div class="row">
            <div class="col-md-2">
                <form class="form-horizontal">
                    <div class="form-group"> 
                        <label for="ErrorCode" style="display:none">ErrorCode:</label>                     
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ErrorCode, new { @class = "form-control fat" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Act" class="col-sm-2 control-label">ACT</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.Act, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group ">
                        <label for="Id" class="col-sm-2 control-label">ID</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.Id, new { @class = "form-control" })
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-10">
                @{
                    Html.Kendo().Grid(Model.E052Recs)
                    .Name("E052Grid")
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .ServerOperation(false)
                    )
                    .Pageable(pageable => pageable
                        .PageSizes(new object[] { 10, 20, 50, 100, 200, 500, 1000 })
                    )
                    .ToolBar(tools => tools.Excel())
                    .Excel(excel => excel
                        .FileName("Export.xlsx")
                        .ProxyURL(Url.Action("Excel_Export_Save", "VitapBase", "Grid"))
                        .AllPages(true)
                    )
                    .Render();
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                <div class="row btn-table">
                    <div class="col-md-6">
                        <button id="btnTransHist" type="button" class="btn btn-fixed-width">TransHist</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-fixed-width" 
                            onclick="window.location.href='@Html.Raw(Url.Action("ViewEDIPO", "TransHist", new { Act = Model.Act, po_id = String.IsNullOrEmpty(Model.PoId) ? Model.PDocNo : Model.PoId}, null))'" 
                            @{ 
                                bool disableViewEDIPoButton = true;
                                if (Model.PoExists)
                                {
                                    if (Model.EdiInd == "T")
                                    {
                                        disableViewEDIPoButton = false;
                                    }
                                    else if (Model.PrepCode != null && Model.PoImgageId != null) {
                                        disableViewEDIPoButton = false;
                                    }

                                }

                                if (disableViewEDIPoButton)
                                {
                                    @:disabled="disabled"
                                }
                            }
                            >View EDI PO
                        </button>
                    </div>
                </div>
                <div class="row btn-table">
                    <div class="col-md-6">
                        <button data-imagetype="po" data-tiffid="@Model.PoId" type="button" data-toggle="tooltip" title="@Model.PoImageBtnTip" class="btn btn-img"
                            @{ if (!Model.PoImageExists) {@:disabled="disabled" 
                                }}
                        >View PO Image</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-fixed-width"
                            onclick = "window.location.href='@Url.Action("ViewPO", "TransHist", new { po_Id = Model.PoId}, null)'"
                            @{ if (!Model.PoExists) {@:disabled="disabled" 
                                }}
                        >View PO</button>
                    </div>
                </div>
                <div class="row btn-table">
                    <div class="col-md-6">
                        <button data-imagetype="inv" data-tiffid="@Model.InvKeyId" type="button" data-toggle="tooltip" title="@Model.InvImageBtnTip" class="btn btn-img"
                            @{ if (!Model.InvImageExists) {@:disabled="disabled" 
                                }}
                            >View INV Image</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-fixed-width"
                            onclick = "window.location.href='@Url.Action("ViewInvoice", "TransHist", new { inv_Key_Id = Model.InvKeyId}, null)'"
                            @{ if (!Model.InvExists) {@:disabled="disabled" 
                                }}
                        >View INV</button>
                    </div>
                </div>

                <div class="row btn-table">
                    <div class="col-md-6">
                        <button data-imagetype="rr" data-tiffid="@Model.RRId" type="button" data-toggle="tooltip" title="@Model.RRImageBtnTip " class="btn btn-img"
                            @{ if (!Model.RRImageExists) {@:disabled="disabled" 
                                }}
                        >View RR Image</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-fixed-width"
                            onclick = "window.location.href='@Url.Action("ViewRR", "TransHist", new { rr_Id = Model.RRId}, null)'"
                            @{ if (!Model.RRExists) {@:disabled="disabled" 
                                }}
                        >View RR</button>
                    </div>
                </div>
                @{
                    if (Model.InvKeyId != null && Model.ErrorCode == "U044")
                    {
                        <div class="row btn-table">
                            <div class="col-md-12" style="padding-right:0px;">
                                <button type="button" class="btn  used-inv" style="width:100%">Show Used Invoice #s</button>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="col-sm-10">
                <div class="row">
                    <div class="col-sm-12">
                        <label for="Memo" style="display:none">Memo: </label>
                        @Html.TextAreaFor(x => x.Memo, new { @class = "fill" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <label for="Memo2" style="display:none">Memo2: </label>
                        @Html.TextAreaFor(x => x.Memo2, new { @class = "fill" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="border-container">
        <div class="row">
            <div class="col-sm-2">
                <button type="button" class="btn  btn-fixed-width" 
                    onclick = "window.location.href='@Url.Action("Print", "Exceptions")'"
                    @{ if (Model.ErrorCode != "E052" || (Model.EdiInd != "T" && (Model.PrepCode != null && Model.PoImgageId != null))) { @:disabled="disabled" 
                    } }
                 >Print
                 </button>
            </div>
            <div class="col-sm-2">
                @{
                    if (Model.InvExists || Model.RRExists || Model.PoExists)
                    {
                        var caption = "List";
                        if(Model.InvExists) {
                            caption = "List INVS";
                        }
                        else if (Model.RRExists)
                        {
                            caption = "List RRs";
                        }
                        else if (Model.PoExists)
                        {
                            caption = "List POs";
                        }

                        <button onclick = "window.location.href='@Url.Action("List", "Exceptions")'" type="button" class="btn  btn-fixed-width">@caption</button>
                    }
                }
            </div>
            <div class="col-sm-2">
                @{ if (Model.ErrorCode != "U049")
                    {
                        <button id="btnAccept" type="button" class="btn  btn-fixed-width"
                            @{ if (!((Model.ErrorCode == "U044" && Model.Memo == "Possible Duplicate RR") || (Model.ErrorCode == "U043" && Model.Memo == "VCPO RR POP Date"))) { @:disabled="disabled" 
                            } }
                        >Accept </button>
                    }
                }
            </div>
            <div class="col-sm-2">
                @{ 
                    var CorrectDe1Text = "";
                    if (Model.ErrorCode == "U049") {
                        CorrectDe1Text = "Review";
                    }
                    else {
                        CorrectDe1Text = "Change";
                    }
                }
                <button type="button" data-toggle="tooltip" title="@Model.CorrectDe1Tip" class="btn  btn-fixed-width" 
                        @if(Model.InvExists==true)
                        {
                           @:onclick = "invEdit('@Model.ErrorCode')"
                        }

                         @if(Model.RRExists==true)
                        {
                           @:onclick = "RREdit('@Model.ErrorCode')"
                        }
                     
                    @{ if (Model.ErrorCode == "E052" || (Model.PoExists == false && Model.RRExists == false && Model.InvExists == false))
                            { @:disabled="disabled"
                    } }
                    >@CorrectDe1Text
                </button>
            </div>
            <div class="col-sm-2">
                <button id="btnSkip" type="button" class="btn btn-fixed-width">Skip</button>
            </div>
            <div class="col-sm-2">
                <button id="btnReject" type="button" class="btn  btn-fixed-width"
                    @{ if (Model.ErrorCode == "E052")
                        { @:disabled="disabled"
                    } }
                    >Reject
                </button>
            </div>
        </div>
    </div>
</div>

@section ModalControls
{
    <div id="dialog"></div>
    <div id="picklist"></div>
}

<script type="text/javascript">

    function invEdit(exceptionCode) {
        if (exceptionCode == "U049" || exceptionCode == "U043" || exceptionCode == "U044")
        {
            window.location = "@Url.Action("U049RedirectToInvoiceEdit")";
        }
        else
        {
            window.location = "@Url.Action("InvEdit")";
        }
    }

    function RREdit(exceptionCode) {      
            window.location = "@Url.Action("RREdit")";
    }

    function Notes() {
        window.location = "@Html.Raw(Url.Action("GetNotesView", new
            {
                ErrCode = Model.ErrorCode,
                ButtonType = "ButtonType",
                Act = Model.Act,
                ExId = Model.ExId,
                PDocNo = Model.PDocNo,
                ReturnAction = "BackToUserException",
                ReturnController =  "Exceptions"
            }
        ))";
    }

    $('.btn-img').click(function () {
        var window = $("#dialog");
        if (window.data("kendoWindow")) {
            $("#dialog").data("kendoWindow").open();
        }
        else {
            $("#dialog").kendoWindow();
        }
        var dialog = $("#dialog").data("kendoWindow");
        dialog.setOptions({
            width: 800,
            height: 800
        });

        @{
            var url = string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Action("UserTiffViewer", "Exceptions"));
        }
        dialog.refresh({
            url: "@url" + "?Type=" + $(this).data("imagetype") + "&TypeId=" + $(this).data("tiffid")
        });
    })

    $('.used-inv').click(function () {
        var window = $("#picklist");
        if (window.data("kendoWindow")) {
            $("#picklist").data("kendoWindow").open();
        }
        else {
            $("#picklist").kendoWindow();
        }
        var dialog = $("#picklist").data("kendoWindow");
        dialog.setOptions({
            width: 1100,
            height: 500,
            title: 'Invoice numbers already used'
        });

        @{
            var usedUrl = string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Action("GetPicklistView", "Exceptions"));
        }
        dialog.refresh({
            url: "@usedUrl" + "?Act=" + "@Model.Act" + "&pdocnopo=" + "@Model.PDocNo" + "&VendCd=" + "@Model.VendCd"
        });
    })

    $('#btnAccept').click(function () {
        var url = '@Url.Action("AcceptMain", "Exceptions", new { pDocNo = @Model.PDocNo })';
        window.location = url;
    });

    $("#btnSkip").click(function () {
        window.location = ('@Html.Raw(Url.Action("Skip", "Exceptions", new
        {
            exceptionId = @Model.ExId,
            PDocNo = @Model.PDocNo
        }))');
    });

   $("#btnReject").on("click", function (e) {
        var url = '@Url.Action("Reject", "Exceptions", new { PDocNo = @Model.PDocNo })';
        window.location = url;
    });

    $("#btnTransHist").click(function () {

        var url = '';

        if ('@Model.Act')
        {
            url = '@Html.Raw(Url.Action("Index", "TransHist", new { searchFor = Model.Act, searchIn = "Act", searchShow = "All", searchFY = "All" }, null))'
        }
        else if ('@Model.PDocNo')
        {
            url = '@Html.Raw(Url.Action("Index", "TransHist", new { searchFor = Model.PDocNo, searchIn = "PDocNo", searchShow = "All", searchFY = "All" }, null))'
        }
        else
        {
            url = '@Url.Action("Index", "TransHist")'
        }

        window.open(url, "_blank");
    });

    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        ConfigureKendoGridPaginationControlsFor508("E052Grid");
        MakeKendoGridScrollable("E052Grid", "250px");
    });
</script>