@using VITAP.ViewModels.Reports

@{
    var textAttr = new Dictionary<string, object> { { "style", "width:140px" }, { "disabled", "" } };
    var headerAttr = new { @style = "font-weight:bold" };
    var alignRight = new { style = "text-align: right" };
}

@Html.AntiForgeryToken()
<style>
    label {
        display: inline;
        float: left;
        margin-right: 4px;
        vertical-align: top;
    }

    div.grid-footer {
        text-align: right;
        font-size: 10pt;
    }
</style>

<br />
<h1 style="font-weight:bold">Exception Cleared Report</h1>
<br />
<div class="container-fluid" style="float:left">
    <div style="float: left;width:100%;">
        
        <div class="row" style="clear: left;">

            <Label style="width: 200px;">
                Date From:
                @Html.Kendo().DatePicker().Name("txtFrom").HtmlAttributes(new { style = "width: 110px" })
</Label>
            <Label style="width: 200px;">
                Date To:
                @Html.Kendo().DatePicker().Name("txtTo").HtmlAttributes(new { style = "width: 110px" })
               </Label>

            <Label style="width: 200px;">
                Search:
                @Html.Kendo().TextBox().Name("txtSearch")
            </Label>
                

            <Label style="width: 200px;">
                In:
                @(Html.Kendo().DropDownList()
            .Name("ddlSearch")
            .DataTextField("Text")
            .DataValueField("Value")
            .BindTo(new List<SelectListItem>() {
                new SelectListItem { Text = "All", Value = "All" },
                    new SelectListItem { Text = "Prep_Code", Value = "PrepCode" },
                    new SelectListItem { Text = "Error_Code", Value = "ErrCode" }
          })
                )
</Label>
            <Label style="width: 200px;">
                Show Backend Autorun (PC = VI)
                @Html.Kendo().CheckBox().Name("cbAuto")
</Label>
                @*@(Html.Kendo().Button()
            .Name("Search")
            .Content("Search")
            .HtmlAttributes(new { style = "margin-left: 8px; width: 8em;" })
                )*@

</div>
        <div style="clear: left;">
            <div id="Buttons" style="float: left;min-width: 55%;">
                <br />
                <button type="button" class="btn btn-primary btn-default" onclick="btnSearchOnClick();" style="margin-left: 20px">Search</button>
                <button type="button" class="btn btn-info" style="margin-left: 20px">Save to File</button>
                <button type="button" class="btn btn-info" style="margin-left: 20px">Print</button>
                <button type="button" class="btn btn-info" style="margin-left: 20px; margin-right: 20px">Cancel</button>
            </div>
        </div>


    <div style="clear: left;">
        <br />
        @{
            Html.Kendo().Grid<ExceptionClearedItem>()
                .Name("gridAssociateProductivity")
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(r => r
                        .Action("ExceptionCleared", "Reports")
                        .Data("GetSearchParameters")
                    )
                )
                .Columns(columns =>
                {
                    columns.Bound(c => c.PREPCODE).Title("PREPCODE").Width(10).HeaderHtmlAttributes(headerAttr).HtmlAttributes(alignRight);
                    columns.Bound(c => c.USERNAME).Title("USERNAME").Width(10).HeaderHtmlAttributes(headerAttr).HtmlAttributes(alignRight);
                    columns.Bound(c => c.ERROR_CODE).Title("STAMPDATE").Width(10).HeaderHtmlAttributes(headerAttr).HtmlAttributes(alignRight);
                    columns.Bound(c => c.EXCEPTION_MEMO).Title("DAYSOLD").Width(10).HeaderHtmlAttributes(headerAttr).HtmlAttributes(alignRight);
                    columns.Bound(c => c.COUNT).Title("COUNT").Width(10).HeaderHtmlAttributes(headerAttr).HtmlAttributes(alignRight);
                })
                .AutoBind(false)
                .HtmlAttributes(new { style = "width: 1000px" })
                .Scrollable(s => s.Height(150))
                .Sortable()
                .Filterable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false)
                    .PageSizes(new object[] { 10, 20, 50, 100, 200, 500, 1000 })
                )
                .Render();
        }
    </div>
</div>
    </div>

<script type="text/javascript">
    $(document).ready(function () {
        OnChangePeriod();
        // Without this, the navigation bar at the bottom of the grid is way too tall.
        $('.k-pager-wrap').css('height', '45px');
    }
    )

    function OnChangePeriod() {
        var isRange = $("#Period").val() == "Range";
        if (isRange)
            $("#SearchDates").show();
        else
            $("#SearchDates").hide();
    }

    function GetSearchParameters() {
        // Reserved property names
        // used by DataSourceRequest: sort, page, pageSize, group, filter
        return {
            Period: $("#Period").val(),
            DateFrom: $("#DateFrom").val(),
            DateTo: $("#DateTo").val()
        };
    }

    function btnSearchOnClick() {
        $('#gridExceptionCleared').data("kendoGrid").dataSource.read();
    }
</script>
