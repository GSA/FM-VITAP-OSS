@model VITAP.ViewModels.TransHist.NovationHistoryDesignatedAgentModel
@using (Html.BeginForm())
{
    <div class="pad10">
        @{
            Html.Kendo().Grid<VITAP.ViewModels.TransHist.NovationHistoryDesignatedAgentModel>()
                .Name("gridAgentHistory")
                 .DataSource(dataSource => dataSource
                    .Ajax()
                    .Aggregates(aggr =>
                    {
                        //example
                        //aggr.Add(p => p.Reject).Sum();
                    }
                    )
                    .Read(r => r
                        .Action("NovationHistoryDesignatedAgentRecords", "TransHist")
                        .Data("GetSearchParametersDesignatedAgentRecords")
                    )
                )
                .Columns(columns =>
                {
                    columns.Bound(x => x.NvtDate).Format("{0:d}");
                    columns.Bound(x => x.VendorName);
                    columns.Bound(x => x.VendorId);
                })
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false)
                    .PageSizes(new object[] { 10, 20, 50, 100, 200, 500, 1000 })
                )
                   .Resizable(r => r.Columns(true))
                 .ToolBar(tools => tools.Excel())
                .Excel(excel => excel
                    .FileName("NovationHistoryDesignatedAgentSummary.xlsx")
                    .ProxyURL(Url.Action("Excel_Export_Save", "VitapBase", "Grid"))
                    .AllPages(true)
                )
                .Render();
        }
    </div>

    <script type="text/javascript">

        $(document).ready(function () {
            MakeKendoGridScrollable('gridAgentHistory', '300px');
            ConfigureKendoGridPaginationControlsFor508('gridAgentHistory');

        });
        function GetSearchParametersDesignatedAgentRecords() {

            // Reserved property names
            // used by DataSourceRequest: sort, page, pageSize, group, filter
            return {
                DocNumber: $("#DocNumber").val(),
                Uidy: $("#Uidy").val()
            };
        }

        function btnSearchOnClick() {
            $('#gridAgentHistory').data("kendoGrid").dataSource.read();
        }
    </script>
                }
